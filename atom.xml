<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>书签</title>
  <icon>https://www.gravatar.com/avatar/ebb1c0f6d87bbf86032ee7617472721c</icon>
  <subtitle>博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://bluebookmarks.github.io/"/>
  <updated>2020-07-03T06:18:23.561Z</updated>
  <id>https://bluebookmarks.github.io/</id>
  
  <author>
    <name>在下AKK</name>
    <email>1051347984@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>面试查漏补缺</title>
    <link href="https://bluebookmarks.github.io/2020/05/21/%E9%9D%A2%E8%AF%95%E6%9F%A5%E6%BC%8F%E8%A1%A5%E7%BC%BA/"/>
    <id>https://bluebookmarks.github.io/2020/05/21/%E9%9D%A2%E8%AF%95%E6%9F%A5%E6%BC%8F%E8%A1%A5%E7%BC%BA/</id>
    <published>2020-05-21T01:57:08.000Z</published>
    <updated>2020-07-03T06:18:23.561Z</updated>
    
    <content type="html"><![CDATA[<p>记录我5月份的面试中一些问题</p><a id="more"></a><h2 id="JS篇"><a href="#JS篇" class="headerlink" title="JS篇"></a>JS篇</h2><h3 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h3><p>作用域是在运行代码中特定部分中的变量，函数和对象的可访问性。作用域决定了代码区块中变量和资源的可见性。作用域最大的作用就是隔离变量，不同作用域下的同名变量不会有冲突。</p><ul><li><p>全局作用域：是指声明最外层的变量和末定义直接赋值的变量</p></li><li><p>函数作用域：是指声明在函数内部的变量</p></li><li><p>块级作用域：块级作用域可通过新增命令let和const声明，所声明的变量在指定块的作用域外无法被访问</p></li></ul><h3 id="作用域链"><a href="#作用域链" class="headerlink" title="作用域链"></a>作用域链</h3><p>在内部引用的变量一层一层的寻找对应的值，这种层层关系就是作用域链。作用域链的用途是保证对执行环境有权访问的所有变量和函数的有序访问。</p><h3 id="执行上下文"><a href="#执行上下文" class="headerlink" title="执行上下文"></a>执行上下文</h3><p>JS属于解释型语言，javascript的执行分为：解释和执行</p><p>执行上下文是函数执行之前创建的。代码运行时产生对应的执行环境，在这个环境中所有的变量（变量提升，函数提升）会被先提出来，有赋值直接赋值，无赋值为undefine，代码从上而下执行，这就是执行上下文。</p><p>函数提升的优先级大于变量提升</p><h4 id="解释阶段"><a href="#解释阶段" class="headerlink" title="解释阶段"></a>解释阶段</h4><ul><li><p>词法分析</p></li><li><p>语法分析</p></li><li><p>确定作用域</p></li></ul><h4 id="执行阶段"><a href="#执行阶段" class="headerlink" title="执行阶段"></a>执行阶段</h4><ul><li><p>创建执行上下文</p></li><li><p>执行函数代码</p></li><li><p>垃圾回收</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录我5月份的面试中一些问题&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="面试" scheme="https://bluebookmarks.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>create-react-app中使用typescript</title>
    <link href="https://bluebookmarks.github.io/2020/04/25/create-react-app%E4%B8%AD%E4%BD%BF%E7%94%A8typescript/"/>
    <id>https://bluebookmarks.github.io/2020/04/25/create-react-app%E4%B8%AD%E4%BD%BF%E7%94%A8typescript/</id>
    <published>2020-04-25T06:46:56.000Z</published>
    <updated>2020-07-03T06:05:30.562Z</updated>
    
    <content type="html"><![CDATA[<p>记录下在create-react-app中使用typescript的过程</p><a id="more"></a><h2 id="环境和安装"><a href="#环境和安装" class="headerlink" title="环境和安装"></a>环境和安装</h2><ol><li><p>安装create-react-app</p><p> <code>npm install -g create-react-app</code></p></li><li><p>使用create-react-app构建项目</p><p> <code>npx create-react-app 项目名称 --typescript</code></p><p> 加上 <code>--typescript</code> 是通过ts来构建项目</p></li><li><p>已有的 <code>create-react-app</code> 项目可通过</p> <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install --save typescript @types/node @types/react @types/react-dom @types/jest</span><br><span class="line"></span><br><span class="line"># 或者</span><br><span class="line"></span><br><span class="line">yarn add typescript @types/node @types/react @types/react-dom @types/jest</span><br></pre></td></tr></table></figure><p> 添加typescript</p></li></ol><h2 id="在typescript中引入react-router-dom"><a href="#在typescript中引入react-router-dom" class="headerlink" title="在typescript中引入react-router-dom"></a>在typescript中引入react-router-dom</h2><p>需要安装2个依赖包</p><p><code>yarn add --dev react-router-dom @types/react-router-dom</code></p><p><code>react-router-dom</code> 这个包是react-router的核心包</p><p><code>@types/react-router-dom</code> 这个包是typescript的声明文件</p><p>之后就可以在项目中使用</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  BrowserRouter <span class="keyword">as</span> Router,</span><br><span class="line">  Route,</span><br><span class="line">  Switch,</span><br><span class="line">  Redirect</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'react-router-dom'</span></span><br></pre></td></tr></table></figure><h2 id="第三方包的引入"><a href="#第三方包的引入" class="headerlink" title="第三方包的引入"></a>第三方包的引入</h2><p>大多数的第三方包没有Ts类型文件</p><p>在编辑器中会报警告</p><p><code>无法找到模块“xxx”的声明文件</code></p><p>这里我们需要在xx.d.ts文件中声明</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="keyword">module</span> 'xx' &#123;</span><br><span class="line">  <span class="keyword">const</span> moduleName: <span class="built_in">any</span></span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">default</span> moduleName</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>声明他其中的类型都为 <code>any</code> 或者 模块的应该有的类型</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录下在create-react-app中使用typescript的过程&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="react" scheme="https://bluebookmarks.github.io/tags/react/"/>
    
      <category term="typescript" scheme="https://bluebookmarks.github.io/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>使用hexo搭建博客</title>
    <link href="https://bluebookmarks.github.io/2020/01/12/%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://bluebookmarks.github.io/2020/01/12/%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-01-12T06:50:05.000Z</published>
    <updated>2020-04-24T07:43:15.260Z</updated>
    
    <content type="html"><![CDATA[<p>那个男孩子不想拥有一个个人博客（还是免费的）</p><p>现在有很多第三方博客网站，掘金，简书，csdn等，今天就来搭建一个个人的博客网站，基于Github Page，国内可以通过码云，coding等网站托管，操作步骤大体相同。</p><a id="more"></a><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ol><li><p><a href="#环境要求">环境要求</a></p></li><li><p><a href="#安装Hexo">安装Hexo</a></p></li><li><p><a href="#Github设置">Github设置</a></p></li><li><p><a href="#配置-SSH-key">配置 SSH key</a></p></li><li><p><a href="#部署到Github">部署到Github</a></p></li><li><p><a href="#写博客">写博客</a></p></li><li><p><a href="#图床推荐">图床推荐</a></p></li><li><p><a href="#接入腾讯公益404">接入腾讯公益404</a></p></li></ol><hr><h2 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h2><p>需要 node 和 git 环境</p><p>node中文网 <a href="#http://nodejs.cn/">http://nodejs.cn/</a></p><p>git教程和使用参考廖雪峰的教程 <a href="#https://www.liaoxuefeng.com/wiki/896043488029600/896067008724000">git教程</a></p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>Hexo官网 <a href="#https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></p><ol><li><p>全局安装 hexo</p><p> <code>npm install hexo-cli -g</code></p></li><li><p>创建 hexo 项目</p> <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure></li><li><p>项目目录和运行</p><p> 创建后的项目目录</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">├── _config.yml # 网站的配置信息</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds # 模版文件夹</span><br><span class="line">├── source  # 资源文件夹</span><br><span class="line">|   ├── _drafts # 草稿文件夹</span><br><span class="line">|   └── _posts # 博客文章Markdowm</span><br><span class="line">└── themes  # 主题文件夹</span><br></pre></td></tr></table></figure><p> 本地运行命令 <code>hexo s</code></p><p> 浏览器打开<code>http://localhost:4000</code> 就可以看到效果</p></li></ol><h2 id="Github设置"><a href="#Github设置" class="headerlink" title="Github设置"></a>Github设置</h2><p>Github上新建一个项目</p><p>项目名必须为 <code>github用户名.github.io</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/04/24/JB9IUg.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>创建完成后</p><p>在根目录添加一个index.html，随便编辑一些东西</p><p>然后打开 <code>http://你的用户名.github.io</code> 就可以看到你写的东西了</p><h2 id="配置-SSH-key"><a href="#配置-SSH-key" class="headerlink" title="配置 SSH key"></a>配置 SSH key</h2><p>使用hexo自动部署需要使用SSH key</p><ol><li><p>查看是否生成过打开cmd输入</p><p> <code>cd ~/.ssh</code> 没报错说明以前生成过直接使用 <code>cat ~/.ssh/id_rsa.pub</code> 命令就是可以查看本机上的 SSH key</p></li><li><p>以前未生成过SSH key</p><p> 全局配置git账号</p> <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name "用户名"</span><br><span class="line">git config --global user.email "邮箱地址"</span><br></pre></td></tr></table></figure><p> 开始生成 SSH key</p><p> <code>ssh-keygen -t rsa -C &#39;邮箱地址&#39;</code></p><p> <img src="https://s1.ax1x.com/2020/04/24/JBAlHx.jpg" alt=" "></p><p> 返回 <code>Hi xxx! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code> 说明添加SSH成功</p></li><li><p>添加SSH key 到 Github</p><p> <img src="https://s1.ax1x.com/2020/04/24/JBZPud.png" alt=" "></p></li></ol><h2 id="部署到Github"><a href="#部署到Github" class="headerlink" title="部署到Github"></a>部署到Github</h2><p>官方部署文档 <a href="https://hexo.io/zh-cn/docs/one-command-deployment" target="_blank" rel="noopener">部署文档</a></p><ol><li><p>配置_config.yml 文件参数</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">    <span class="attr">github:</span> <span class="string">https://github.com/用户名/用户名.github.io</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">分支名字</span></span><br></pre></td></tr></table></figure></li><li><p>要安装一个部署插件 <code>hexo-deployer-git</code></p><p> <code>npm install hexo-deployer-git --save</code></p></li><li><p>执行命令部署上传</p><p> <code>hexo g -d</code></p></li><li><p>打开你的博客地址</p></li></ol><h2 id="写博客"><a href="#写博客" class="headerlink" title="写博客"></a>写博客</h2><p>官网写作文档 <a href="https://hexo.io/zh-cn/docs/writing" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/writing</a></p><p>如果你不会 <code>markdown</code> 的书写，请先阅读 <a href="https://www.runoob.com/markdown/md-tutorial.html" target="_blank" rel="noopener">菜鸟教程 | Markdown 教程</a></p><ol><li><p>新建文章</p><p> <code>hexo new &#39;文章标题&#39;</code></p></li><li><p>文章目录</p><p> 新建的文章在 <code>/source/_posts</code> 中查看到</p><p>本地运行查看</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>就可以看到你写的博客</p><p>最后，部署项目</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><p>运行 <code>hexo clean</code> 为了清除缓存文件和已生成的静态文件，尤其是更换主题后需要执行一次</p></li></ol><h2 id="图床推荐"><a href="#图床推荐" class="headerlink" title="图床推荐"></a>图床推荐</h2><p>上传到图床后可以直接到md文件中引用</p><p>(转载自知乎：<a href="https://zhuanlan.zhihu.com/p/35270383?ivk_sa=1023345p" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/35270383?ivk_sa=1023345p</a>)</p><p>选几个我常用的来列举，上面链接里有更多的图床介绍</p><ol><li><p><a href="https://portal.qiniu.com" target="_blank" rel="noopener">七牛云</a></p><p> 注册认证后有10G永久免费空间，每月10G国内和10G国外流量，速度相当快，七牛云是国内专业CDN服务商，插件支持比较多，有免费ssl证书，但https流量收费</p><p> 注意：七牛云30天后会回收测试域名，因此你必须要绑定自己的已备案的域名</p></li><li><p><a href="http://sbimg.cn" target="_blank" rel="noopener">公益图床</a></p><p> 长期保存需要注册使用，这个图床服务器在国内应该还用了cdn，总之速度非常快</p></li><li><p><a href="https://imgchr.com" target="_blank" rel="noopener">路过图床</a></p><p> 支持免注册上传图片，永久存储，支持HTTPS加密访问和调用图片，提供多种图片链接格式，成立于2011年</p><p> 限制：最大10M</p></li><li><p><a href="https://www.superbed.cn" target="_blank" rel="noopener">聚合图床</a></p><p> 将图片分发到多处备份，借助其本身的CDN加速功能，节省服务器流量，并且不用担心图片被删除，即便其中某几个图床上的图片被删除了，还有其他备份，保证万无一失，支持匿名和注册管理</p></li></ol><h2 id="接入腾讯公益404"><a href="#接入腾讯公益404" class="headerlink" title="接入腾讯公益404"></a>接入腾讯公益404</h2><p>公益404网站 <a href="https://www.qq.com/404/" target="_blank" rel="noopener">https://www.qq.com/404/</a></p><p>在 <code>/source</code> 根目录下建立 <code>404.html</code></p><p>接入公益404JS文件，修改跳转到自己的博客主页</p><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>到这一个基本框架的博客就搭建好了，想要自己想要的功能和主题可以阅读Hexo的官方文档来修改和定制。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;那个男孩子不想拥有一个个人博客（还是免费的）&lt;/p&gt;
&lt;p&gt;现在有很多第三方博客网站，掘金，简书，csdn等，今天就来搭建一个个人的博客网站，基于Github Page，国内可以通过码云，coding等网站托管，操作步骤大体相同。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="hexo" scheme="https://bluebookmarks.github.io/tags/hexo/"/>
    
      <category term="github" scheme="https://bluebookmarks.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>vscode插件整理</title>
    <link href="https://bluebookmarks.github.io/2019/12/25/vscode%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/"/>
    <id>https://bluebookmarks.github.io/2019/12/25/vscode%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/</id>
    <published>2019-12-25T08:22:09.000Z</published>
    <updated>2019-12-25T09:22:17.055Z</updated>
    
    <content type="html"><![CDATA[<p>一个完美的编辑器插件可以帮助程序猿快出写出BUG而且表面看不出问题来 ๑乛◡乛๑     —— 在下AKK</p><a id="more"></a><p>整理一下我常用的vscode插件</p><hr><h2 id="基础类"><a href="#基础类" class="headerlink" title="基础类"></a>基础类</h2><h3 id="Auto-Close-Tag"><a href="#Auto-Close-Tag" class="headerlink" title="Auto Close Tag"></a>Auto Close Tag</h3><p>自动闭合标签，提升效率的利器，react，vue亲测可用</p><h3 id="Auto-Rename-Tag"><a href="#Auto-Rename-Tag" class="headerlink" title="Auto Rename Tag"></a>Auto Rename Tag</h3><p>改变标签时，自动改变对应的开始闭合标签，不用找过来找过去</p><h3 id="Code-Runner"><a href="#Code-Runner" class="headerlink" title="Code Runner"></a>Code Runner</h3><p>无需html也可以运行js，ts。还可以运行node，java，python，php…代码（需要对应的环境）</p><h3 id="Code-Spell-Checker"><a href="#Code-Spell-Checker" class="headerlink" title="Code Spell Checker"></a>Code Spell Checker</h3><p>代码英文检测，助你写出正确的英文命名变量（例：写出frist会标出错误，并提供正确的修复）</p><h3 id="Color-Info"><a href="#Color-Info" class="headerlink" title="Color Info"></a>Color Info</h3><p>在颜色光标上悬停可出现色彩模型</p><h3 id="ESLint"><a href="#ESLint" class="headerlink" title="ESLint"></a>ESLint</h3><p>eslint检测，可以帮助你写出符合团队规范的代码</p><h3 id="filesize"><a href="#filesize" class="headerlink" title="filesize"></a>filesize</h3><p>查看你代码文件的大小</p><h3 id="GitLens-—-Git-supercharged"><a href="#GitLens-—-Git-supercharged" class="headerlink" title="GitLens — Git supercharged"></a>GitLens — Git supercharged</h3><p>非常重要的git插件，可以让你清楚的知道git上代码的提交历史，修改信息，操作人员（甩锅必备）</p><h3 id="HTML-CSS-Support"><a href="#HTML-CSS-Support" class="headerlink" title="HTML CSS Support"></a>HTML CSS Support</h3><p>html标签上写class智能提示项目所支持的样式</p><h3 id="HTML-Snippets"><a href="#HTML-Snippets" class="headerlink" title="HTML Snippets"></a>HTML Snippets</h3><p>H5代码片段以及提示</p><h3 id="Live-Server"><a href="#Live-Server" class="headerlink" title="Live Server"></a>Live Server</h3><p>可以开启本地服务器，方便调试</p><h3 id="markdownlint"><a href="#markdownlint" class="headerlink" title="markdownlint"></a>markdownlint</h3><p>markdown文件的规则检测，助你写出一份标准的markdown</p><h3 id="Path-Intellisense"><a href="#Path-Intellisense" class="headerlink" title="Path Intellisense"></a>Path Intellisense</h3><p>文件索引插件，帮助你快速写出正确的文件路径</p><h3 id="Prettier-Code-formatter"><a href="#Prettier-Code-formatter" class="headerlink" title="Prettier - Code formatter"></a>Prettier - Code formatter</h3><p>代码美化插件，一键美化</p><h3 id="px2vw"><a href="#px2vw" class="headerlink" title="px2vw"></a>px2vw</h3><p>一个自动把 px 单位转成 vw 单位的 VSCode 插件，写H5必备</p><h3 id="React-Native-Tools"><a href="#React-Native-Tools" class="headerlink" title="React Native Tools"></a>React Native Tools</h3><p>在vscode 上调试 React Native 的插件</p><h3 id="Settings-Sync"><a href="#Settings-Sync" class="headerlink" title="Settings Sync"></a>Settings Sync</h3><p>上传本地配置，插件列表到github上保存，即使更换电脑可以快速同步设置和插件（需要Github Token）</p><h3 id="stylelint"><a href="#stylelint" class="headerlink" title="stylelint"></a>stylelint</h3><p>检测css的规则，确保你写出的是正确和标准的CSS</p><h3 id="TSLint"><a href="#TSLint" class="headerlink" title="TSLint"></a>TSLint</h3><p>检测Ts的规则，助你写出标准的TS代码</p><hr><h2 id="React"><a href="#React" class="headerlink" title="React"></a>React</h2><h3 id="ES7-React-Redux-GraphQL-React-Native-snippets"><a href="#ES7-React-Redux-GraphQL-React-Native-snippets" class="headerlink" title="ES7 React/Redux/GraphQL/React-Native snippets"></a>ES7 React/Redux/GraphQL/React-Native snippets</h3><p>写 React/Redux/React-Native 时可以通过简写快速生成对应的模板</p><p><code>imr → import React from &#39;react&#39;</code></p><p><code>imrn → import { $1 } from &#39;react-native&#39;</code></p><hr><h2 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h2><h3 id="Vetur"><a href="#Vetur" class="headerlink" title="Vetur"></a>Vetur</h3><p>写vue必备，代码自动补全，错误提示，语法高亮</p><hr><h2 id="美化插件"><a href="#美化插件" class="headerlink" title="美化插件"></a>美化插件</h2><h3 id="文件图标类"><a href="#文件图标类" class="headerlink" title="文件图标类"></a>文件图标类</h3><ul><li><p>Material Icon Theme</p><p>扁平风的文件图标</p></li><li><p>vscode-icons</p><p>超级多的图标，可以自己定制</p></li></ul><h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><ul><li><p>Noctis</p><p>超级多的配色</p></li><li><p>One Dark Pro</p><p>很火的一个主题，深色主题 + 代码配色 很舒服</p></li></ul><hr><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="LeetCode"><a href="#LeetCode" class="headerlink" title="LeetCode"></a>LeetCode</h3><p>在 VS Code 中练习 LeetCode，闲来无事可以在vscode上刷算法题</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一个完美的编辑器插件可以帮助程序猿快出写出BUG而且表面看不出问题来 ๑乛◡乛๑     —— 在下AKK&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="vscode" scheme="https://bluebookmarks.github.io/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>vscode中调试typescript</title>
    <link href="https://bluebookmarks.github.io/2019/12/25/vscode%E4%B8%AD%E8%B0%83%E8%AF%95typescript/"/>
    <id>https://bluebookmarks.github.io/2019/12/25/vscode%E4%B8%AD%E8%B0%83%E8%AF%95typescript/</id>
    <published>2019-12-25T07:38:31.000Z</published>
    <updated>2019-12-25T07:47:12.544Z</updated>
    
    <content type="html"><![CDATA[<p>vscode中调试typescript</p><a id="more"></a><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li><a href="#依赖包">依赖包</a></li><li><a href="#配置tsconfigjson">配置tsconfig.json</a></li><li><a href="#配置launchjson">配置launch.json</a></li><li><a href="#开始调试">开始调试</a></li></ul><h2 id="依赖包"><a href="#依赖包" class="headerlink" title="依赖包"></a>依赖包</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; npm安装</span><br><span class="line">npm i typescript</span><br><span class="line">npm i ts-node</span><br><span class="line">&#x2F;&#x2F; yarn安装</span><br><span class="line">yarn add typescript</span><br><span class="line">yarn add ts-node</span><br></pre></td></tr></table></figure><h2 id="配置tsconfig-json"><a href="#配置tsconfig-json" class="headerlink" title="配置tsconfig.json"></a>配置tsconfig.json</h2><ul><li><p>初始化tsconfig.json</p><p><code>tsc --init</code></p></li><li><p>配置tsconfig.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"compilerOptions"</span>: &#123;</span><br><span class="line">    <span class="attr">"module"</span>: <span class="string">"commonjs"</span>,</span><br><span class="line">    <span class="attr">"target"</span>: <span class="string">"es5"</span>,</span><br><span class="line">    <span class="attr">"noImplicitAny"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"outDir"</span>: <span class="string">"./dist"</span>,</span><br><span class="line">    <span class="attr">"sourceMap"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"include"</span>: [</span><br><span class="line">    <span class="string">"src/**/*"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="配置launch-json"><a href="#配置launch-json" class="headerlink" title="配置launch.json"></a>配置launch.json</h2><ul><li><p>打开调试 <code>alt + D</code></p></li><li><p>选择添加配置</p></li><li><p>编辑launch.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"0.2.0"</span>,</span><br><span class="line">  <span class="attr">"configurations"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">"Current TS File"</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"node"</span>,</span><br><span class="line">      <span class="attr">"request"</span>: <span class="string">"launch"</span>,</span><br><span class="line">      <span class="attr">"program"</span>: <span class="string">"$&#123;workspaceRoot&#125;/node_modules/ts-node/dist/bin.js"</span>,</span><br><span class="line">      <span class="attr">"args"</span>: [</span><br><span class="line">          <span class="string">"$&#123;relativeFile&#125;"</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">"cwd"</span>: <span class="string">"$&#123;workspaceRoot&#125;"</span>,</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"inspector"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="开始调试"><a href="#开始调试" class="headerlink" title="开始调试"></a>开始调试</h2><ul><li><p>打开对应的ts文件</p></li><li><p>打开调试 <code>alt + D</code></p></li><li><p>选择启动调试</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;vscode中调试typescript&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="vscode" scheme="https://bluebookmarks.github.io/tags/vscode/"/>
    
      <category term="typescript" scheme="https://bluebookmarks.github.io/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>react-router</title>
    <link href="https://bluebookmarks.github.io/2019/12/25/react-router/"/>
    <id>https://bluebookmarks.github.io/2019/12/25/react-router/</id>
    <published>2019-12-25T02:43:12.000Z</published>
    <updated>2019-12-25T03:00:28.541Z</updated>
    
    <content type="html"><![CDATA[<p>React Router 是一个基于 React 之上的强大路由库，它可以让你向应用中快速地添加视图和数据流，同时保持页面与 URL 间的同步。</p><a id="more"></a><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p><a href="#react-router-dom">react-router-dom</a></p><ol><li><p><a href="#1-安装react-router-dom">安装react-router-dom</a></p></li><li><p><a href="#2-使用react-router-dom">使用react-router-dom</a></p></li><li><p><a href="#3-使用嵌套路由">使用嵌套路由</a></p></li></ol><hr><h2 id="react-router-dom"><a href="#react-router-dom" class="headerlink" title="react-router-dom"></a>react-router-dom</h2><p>react-router-dom 是 react-router v4 的 web 版本</p><p>v4 和 v2, v3的区别为 v4版本把路由拆分为组件的形式可在各个模块中调用</p><p>v2/v3</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Router history=&#123;browserHistory&#125;&gt;</span><br><span class="line">  &lt;Route path=<span class="string">"/"</span> component=&#123;Home&#125;&gt;</span><br><span class="line">    &lt;IndexRoute component=&#123;HomePage&#125; /&gt;</span><br><span class="line">    &lt;Route path=<span class="string">"/users"</span> component=&#123;UsersPage&#125; /&gt;</span><br><span class="line">  &lt;<span class="regexp">/Route&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>Router&gt;</span><br></pre></td></tr></table></figure><p>v4</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="comment">/* App.js */</span>&#125;</span><br><span class="line">&lt;BrowserRouter&gt;</span><br><span class="line">  &lt;Home /&gt;</span><br><span class="line">&lt;<span class="regexp">/BrowserRouter&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&#123;/</span>* Home.js *<span class="regexp">/&#125;</span></span><br><span class="line"><span class="regexp">&lt;div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;div className="pages"&gt;page:</span></span><br><span class="line"><span class="regexp">    &lt;Route path="/</span><span class="string">" exact component=&#123;HomePage&#125; /&gt;</span></span><br><span class="line"><span class="string">    &lt;Route path="</span>/users<span class="string">" component=&#123;UsersPage&#125; /&gt;</span></span><br><span class="line"><span class="string">  &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-安装react-router-dom"><a href="#1-安装react-router-dom" class="headerlink" title="1. 安装react-router-dom"></a>1. 安装react-router-dom</h3><p>命令 <code>yarn add react-router-dom --dev</code> || <code>npm i react-router-dom -S</code></p><h3 id="2-使用react-router-dom"><a href="#2-使用react-router-dom" class="headerlink" title="2. 使用react-router-dom"></a>2. 使用react-router-dom</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  BrowserRouter <span class="keyword">as</span> Router,</span><br><span class="line">  Route,</span><br><span class="line">  Link,</span><br><span class="line">  Switch,</span><br><span class="line">  Redirect</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'react-router-dom'</span></span><br><span class="line"><span class="keyword">import</span> Index <span class="keyword">from</span> <span class="string">'./pages/Index'</span></span><br><span class="line"><span class="keyword">import</span> Other <span class="keyword">from</span> <span class="string">'./pages/Other'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> App = <span class="function"><span class="params">()</span> =&gt;</span> (</span><br><span class="line">  &lt;Router&gt;</span><br><span class="line">    &lt;div className=<span class="string">"App"</span>&gt;</span><br><span class="line">      点击位置：</span><br><span class="line">      &lt;ul&gt;</span><br><span class="line">        &#123;<span class="comment">/* link 跳转标签 */</span>&#125;</span><br><span class="line">        &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">"/"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">        &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">"/other"</span>&gt;</span>其他<span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">      &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">      当前页面：</span></span><br><span class="line"><span class="regexp">      &#123;/</span>* Switch 只渲染一个路由 *<span class="regexp">/&#125;</span></span><br><span class="line"><span class="regexp">      &lt;Switch&gt;</span></span><br><span class="line"><span class="regexp">        &#123;/</span>* exact 只对当前路由匹配 *<span class="regexp">/&#125;</span></span><br><span class="line"><span class="regexp">        &lt;Route exact path="/</span><span class="string">" component=&#123; Index &#125;&gt;&lt;/Route&gt;</span></span><br><span class="line"><span class="string">        &lt;Route path="</span>/other<span class="string">" component=&#123; Other &#125;&gt;&lt;/Route&gt;</span></span><br><span class="line"><span class="string">        &#123;/* 重定向  输入不存在的路径时跳转 */&#125;</span></span><br><span class="line"><span class="string">        &lt;Redirect to="</span>/<span class="string">" /&gt;</span></span><br><span class="line"><span class="string">      &lt;/Switch&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">  &lt;/Router&gt;</span></span><br><span class="line"><span class="string">)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">export default App</span></span><br></pre></td></tr></table></figure><ol><li><p>v4 版本则有了一个包含的关系：如匹配 path=”/users” 的路由会匹配 path=”/“的路由，在页面中这两个模块会同时进行渲染。因此，v4中多了 <code>exact</code> 关键词，表示<strong>只对当前的路由进行匹配</strong></p></li><li><p><code>&lt;Switch&gt;</code>只有一个路由会被渲染，并且<strong>总是渲染第一个匹配到的组件</strong>。（PS: 在第一个路由中，还是需要使用 exact，否则，当我们渲染 ‘/other’ 或 ‘/other/page’ 时，只会显示匹配 ‘/‘ 的组件。）</p></li><li><p><code>&lt;Redirect&gt;</code> 组件，单独使用时，一旦当路由匹配到的时候，浏览器就会进行重定向跳转；而配合 <code>&lt;Switch&gt;</code> 使用时，<strong>只有当没有路由匹配的时候</strong>，才会进行重定向。 （eg： 跳转-&gt; /error  未定义重定向 -&gt; /）</p></li><li><p>v4版本废弃掉<code>&lt;IndexRoute&gt;</code>使用<code>&lt;Route&gt;</code>中的<code>exact</code>关键词代替</p></li></ol><h3 id="3-使用嵌套路由"><a href="#3-使用嵌套路由" class="headerlink" title="3. 使用嵌套路由"></a>3. 使用嵌套路由</h3><p>第一种方式（不推荐）</p><p>这种方式很冗余，渲染时要把整体通用部分重复渲染，项目较大会产生重复代码，降低性能</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> App = <span class="function"><span class="params">()</span> =&gt;</span> (</span><br><span class="line">  &lt;Router&gt;</span><br><span class="line">    &lt;Switch&gt;</span><br><span class="line">      &#123;<span class="comment">/* exact 只对当前路由匹配 */</span>&#125;</span><br><span class="line">      &lt;Route exact path=<span class="string">"/"</span> component=&#123; Index &#125;&gt;<span class="xml"><span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line">      &lt;Route path=<span class="string">"/other"</span> exact component=&#123; Other &#125;&gt;<span class="xml"><span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line">      &lt;Route path=<span class="string">"/other/:userId"</span> component=&#123; OtherUser &#125;&gt;<span class="xml"><span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line">      &lt;Route path=<span class="string">"/add"</span> exact component=&#123; Add &#125;&gt;<span class="xml"><span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line">      &lt;Route path=<span class="string">"/add/:num"</span> component=&#123; AddNum &#125;&gt;<span class="xml"><span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line">      &#123;<span class="comment">/* 重定向  输入不存在的路径时跳转 */</span>&#125;</span><br><span class="line">      &lt;Redirect to=<span class="string">"/"</span> /&gt;</span><br><span class="line">    &lt;<span class="regexp">/Switch&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>Router&gt;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>第二种方式(推荐)</p><p>通过组件的思想来实现，对应的路由嵌套到对应的页面。可以使用 <code>match</code> 路由属性来优化，方便代码维护</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> App = <span class="function"><span class="params">()</span> =&gt;</span> (</span><br><span class="line">  &lt;Router&gt;</span><br><span class="line">    &lt;Switch&gt;</span><br><span class="line">      &#123;<span class="comment">/* exact 只对当前路由匹配 */</span>&#125;</span><br><span class="line">      &lt;Route exact path=<span class="string">"/"</span> component=&#123; Index &#125;&gt;<span class="xml"><span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line">      &lt;Route path=<span class="string">"/other"</span> exact component=&#123; Other &#125;&gt;<span class="xml"><span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line">      &#123;<span class="comment">/* 重定向  输入不存在的路径时跳转 */</span>&#125;</span><br><span class="line">      &lt;Redirect to=<span class="string">"/"</span> /&gt;</span><br><span class="line">    &lt;<span class="regexp">/Switch&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>Router&gt;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Other = <span class="function">(<span class="params">&#123;match&#125;</span>) =&gt;</span> (</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;Switch&gt;</span><br><span class="line">      &lt;Route path=&#123;match.path&#125; exact render=&#123;() =&gt; <span class="xml"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>地址栏输入ID<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span> <span class="regexp">/&gt;</span></span><br><span class="line"><span class="regexp">      &lt;Route path=&#123;`$&#123;match.path&#125;/</span>:id<span class="string">`&#125; component=&#123; User &#125; /&gt;</span></span><br><span class="line"><span class="string">    &lt;/Switch&gt;</span></span><br><span class="line"><span class="string">  &lt;/div&gt;</span></span><br><span class="line"><span class="string">)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">const User = (&#123;match&#125;) =&gt; (</span></span><br><span class="line"><span class="string">  &lt;div&gt;</span></span><br><span class="line"><span class="string">    user id &#123;match.params.id&#125;</span></span><br><span class="line"><span class="string">  &lt;/div&gt;</span></span><br><span class="line"><span class="string">)</span></span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;React Router 是一个基于 React 之上的强大路由库，它可以让你向应用中快速地添加视图和数据流，同时保持页面与 URL 间的同步。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="react" scheme="https://bluebookmarks.github.io/tags/react/"/>
    
  </entry>
  
</feed>
